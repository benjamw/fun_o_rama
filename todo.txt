if the team is only one player, the team name is the player's name

add a redemption bracket for losers to play in more than one game



Put the match creation stuff behind the admin

make the admin require users

have a page where the tournaments can be seen, but not interacted with










add button to reset all `played` values for the songs






add player avatars to match edit page (Match/start.ctp), and to
match create page in checkbox list (Home/index.ctp)

make a tournament generator (auto-use when creating a cornhole game with more than 4 players)

allow more then one sat out player

allow more than one award per badge

clean up admin area, make sure everything has all the data it needs
maybe also fix up the templates and re-bake to make sure
-- possibly add in the links for related-related models in the views?

re-bake other admin areas (groups, users, pages, etc)

Add levels for players based on number of games played (ranking, or
experience?)

more stats on stats page, maybe split out each game type into it's own
table

add hex code to colors, and update with this list: http://xona.com/colorlist/




Tournament Generator
===============================
Two Options:
	- Round Robin (every team plays every other team once)
		team with most wins is the winning team
		- for this method, generate all possible matches up front
			disregarding match quality

	- Ladder [Bracket] (every team plays at least once, winner continues)
		last team standing is the winner
		- for this method, generate all possible matches and pull
			the top ones:
				3 teams: top 1 match w/1 rem,
				4 teams: top 2 matches,
				5 teams: top 2 matches w/1 rem,
				6 teams: top 3 matches,
				n teams: top floor(n / 2) matches w/(n % 2) rem
			then play those teams together, and if odd teams, bring in
			odd team on second round and calculate top matches for winners

			- future: double/triple elimination

To generate teams:
	Create all possible team options with given players and team size
	Take those teams, and with remaining players create all possible
	team options, and continue until all teams are created.
	For each of those team combinations, calculate the match quality,
	and keep the best one.

	So just like how it works now, except extend team creation recursively
	until all teams are created.

